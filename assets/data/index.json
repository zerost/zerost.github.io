{"hash":"17ed50fa1e4f7391a6e0eeeb020a359fd7f45437","data":{"allMarkdownPost":{"edges":[{"node":{"id":"dd930f951c4f72cdeb89d95a799779f7","title":"라즈베리파이 하드디스크 온도 확인","content":"<p>Ubuntu Linux 5.4.0-1056-raspi 버전 기준(Rasberry Pi OS 기준)</p>\n<p><a href=\"https://www.smartmontools.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Smartmontools</a> 이라는 패키지를 설치해야 현재 하드디스크 온도를 확인 할 수 있다.\n패키지를 설치한다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> smartmontools<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>설치후에 실행을 해본다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> smartctl -A /dev/sda<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>결과가 아래와 같이 출력된다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> smartctl -A /dev/sda\nsmartctl <span class=\"token number\">7.1</span> <span class=\"token number\">2019</span>-12-30 r5022 <span class=\"token punctuation\">[</span>aarch64-linux-5.4.0-1056-raspi<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>local build<span class=\"token punctuation\">)</span>\nCopyright <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span> <span class=\"token number\">2002</span>-19, Bruce Allen, Christian Franke, www.smartmontools.org\n\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> START OF READ SMART DATA SECTION <span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nSMART Attributes Data Structure revision number: <span class=\"token number\">16</span>\nVendor Specific SMART Attributes with Thresholds:\nID<span class=\"token comment\"># ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE</span>\n  <span class=\"token number\">1</span> Raw_Read_Error_Rate     0x000b   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   016    Pre-fail  Always       -       <span class=\"token number\">0</span>\n  <span class=\"token number\">2</span> Throughput_Performance  0x0004   <span class=\"token number\">128</span>   <span class=\"token number\">128</span>   054    Old_age   Offline      -       <span class=\"token number\">108</span>\n  <span class=\"token number\">3</span> Spin_Up_Time            0x0007   <span class=\"token number\">154</span>   <span class=\"token number\">154</span>   024    Pre-fail  Always       -       <span class=\"token number\">528</span> <span class=\"token punctuation\">(</span>Average <span class=\"token number\">527</span><span class=\"token punctuation\">)</span>\n  <span class=\"token number\">4</span> Start_Stop_Count        0x0012   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Always       -       <span class=\"token number\">1473</span>\n  <span class=\"token number\">5</span> Reallocated_Sector_Ct   0x0033   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   005    Pre-fail  Always       -       <span class=\"token number\">0</span>\n  <span class=\"token number\">7</span> Seek_Error_Rate         0x000a   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   067    Old_age   Always       -       <span class=\"token number\">0</span>\n  <span class=\"token number\">8</span> Seek_Time_Performance   0x0004   <span class=\"token number\">128</span>   <span class=\"token number\">128</span>   020    Old_age   Offline      -       <span class=\"token number\">18</span>\n  <span class=\"token number\">9</span> Power_On_Hours          0x0012   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Always       -       <span class=\"token number\">1036</span>\n <span class=\"token number\">10</span> Spin_Retry_Count        0x0012   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   060    Old_age   Always       -       <span class=\"token number\">0</span>\n <span class=\"token number\">12</span> Power_Cycle_Count       0x0032   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Always       -       <span class=\"token number\">47</span>\n<span class=\"token number\">192</span> Power-Off_Retract_Count 0x0032   099   099   000    Old_age   Always       -       <span class=\"token number\">1520</span>\n<span class=\"token number\">193</span> Load_Cycle_Count        0x0012   099   099   000    Old_age   Always       -       <span class=\"token number\">1520</span>\n<span class=\"token number\">194</span> Temperature_Celsius     0x0002   <span class=\"token number\">151</span>   <span class=\"token number\">151</span>   000    Old_age   Always       -       <span class=\"token number\">43</span> <span class=\"token punctuation\">(</span>Min/Max <span class=\"token number\">14</span>/56<span class=\"token punctuation\">)</span>\n<span class=\"token number\">196</span> Reallocated_Event_Count 0x0032   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Always       -       <span class=\"token number\">0</span>\n<span class=\"token number\">197</span> Current_Pending_Sector  0x0022   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Always       -       <span class=\"token number\">0</span>\n<span class=\"token number\">198</span> Offline_Uncorrectable   0x0008   <span class=\"token number\">100</span>   <span class=\"token number\">100</span>   000    Old_age   Offline      -       <span class=\"token number\">0</span>\n<span class=\"token number\">199</span> UDMA_CRC_Error_Count    0x000a   <span class=\"token number\">200</span>   <span class=\"token number\">200</span>   000    Old_age   Always       -       <span class=\"token number\">17</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ID 194번 Temperature_Celsius이 현재 하드디스크 온도이다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token number\">194</span> Temperature_Celsius     0x0002   <span class=\"token number\">151</span>   <span class=\"token number\">151</span>   000    Old_age   Always       -       <span class=\"token number\">43</span> <span class=\"token punctuation\">(</span>Min/Max <span class=\"token number\">14</span>/56<span class=\"token punctuation\">)</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>현재 내 라즈베리파이에 연결된 하드디스크 온도는 43도이다.\n온도만 출력 되도록 보완해서 온도만 출력 하겠다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> smartctl -A /dev/sda <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> Temperature_Celsius <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $10 \" °C\"}'</span>\n<span class=\"token number\">45</span> °C<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>현재 하드디스크 온도만 직관적으로 잘 출력된다.</p>\n","lang":"ko","category":["Raspberry Pi","Ubuntu Linux"],"date":"2022-04-03T19:06:00.000Z"}},{"node":{"id":"b222cce552056a4d1515fefb02e4d8e1","title":"라즈베리파이 Ubuntu Linux CPU 온도확인","content":"<p>Ubuntu Linux 5.4.0-1056-raspi 버전 기준(Rasberry Pi OS 기준)</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> /sys/class/thermal/thermal_zone0/temp\n<span class=\"token number\">42355</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>결과가 42355로 나오는데, 1,000을 나누면 현재 온도이다. 현재 내 Rasberry Pi CPU온도는 42.355도 이다.\n보기좋게 출력하기 위해서 아래와 같이 보완했다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$  <span class=\"token function\">cat</span> /sys/class/thermal/thermal_zone0/temp <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print $1/1000 \" °C\"}'</span>\n<span class=\"token number\">42.355</span> °C<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>훨씬 더 직관적이다!</p>\n","lang":"ko","category":["Raspberry Pi","Ubuntu Linux"],"date":"2022-04-03T18:10:30.000Z"}},{"node":{"id":"612bbaeecf240b726e6913aacfad9bf5","title":"PostgreSQL INSERT시 TIMESTAMPTZ 컬럼 UTC로 셋팅","content":"<p>테이블생성 DDL</p>\n<pre class=\"language-sql line-numbers\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tb_member <span class=\"token punctuation\">(</span>\n\tmember_id uuid <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n\tmember_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n\teffective_date timestamptz <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n\texpiration_date timestamptz <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>member_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>글로벌용 프로그램을 개발하다보면 timezone 관련해서 고민이 필요하다.\nexpiration_date 항목에 UTC 9999-12-31 23:59:59.999999 데이터를 집어넣으려고 한다.\n하지만 그냥 insert 할 경우 현재 환경에 셋팅된 시간(나의 경우 GMT+9)으로 들어간다.</p>\n<p>그래서 9999-12-31 23:59:59.999999 이 데이터가 utc라는걸 셋팅해줘야 된다.\n아래의 형태로 형 변환을 하면 된다.</p>\n<pre class=\"language-sql line-numbers\"><code class=\"language-sql\">TO_TIMESTAMP<span class=\"token punctuation\">(</span><span class=\"token string\">'99991231 235959.999999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYYMMDD HH24MISS.US'</span><span class=\"token punctuation\">)</span>::<span class=\"token keyword\">timestamp</span> without <span class=\"token keyword\">time</span> zone at <span class=\"token keyword\">time</span> zone <span class=\"token string\">'utc'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>최종 SQL INSERT</p>\n<pre class=\"language-sql line-numbers\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tb_member <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>gen_random_uuid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'기본'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TO_TIMESTAMP<span class=\"token punctuation\">(</span><span class=\"token string\">'99991231 235959.999999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YYYYMMDD HH24MISS.US'</span><span class=\"token punctuation\">)</span>::<span class=\"token keyword\">timestamp</span> without <span class=\"token keyword\">time</span> zone at <span class=\"token keyword\">time</span> zone <span class=\"token string\">'utc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>[참고자료]<br>\n<a href=\"https://stackoverflow.com/questions/42684304/how-to-convert-a-string-to-timestamp-in-a-desired-timezone\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">how to convert a string to timestamp in a desired timezone - stackoverflow</a></p>\n","lang":"ko","category":["Database","Postgresql"],"date":"2022-04-03T17:24:25.000Z"}}]}},"context":{}}