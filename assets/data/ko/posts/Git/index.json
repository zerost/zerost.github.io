{"hash":"20dc515c1f68fa4d05536f62e08c4756a1adab2e","data":null,"context":{"data":{"name":"Git","postList":[{"id":"bf89579966bacedfefa97d17ea28abf6","title":"git checkout를 switch restore로 대체하기","content":"<h1 id=\"1-배경\"><a href=\"#1-%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 배경</h1>\n<p>git에 사용법이 그리 익숙치가 않아서, branch이동이나 복구등등을 찾다보니 git checkout 기능이 switch, restore로 분리되어서 새 기능이 추가 되었다고 한다. 사유는 checkout 하나의 명령어에 기능이 많기 때문이라고 한다.\n그 동안 checkout으로 사용해왔는데, 명확하기 위해서 분리했다고 하니 새로운 기능을 사용하는 것이 좋을 것 같다. </p>\n<h1 id=\"2-switch\"><a href=\"#2-switch\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. switch</h1>\n<p>branch 이동</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> switch master\nSwitched to branch <span class=\"token string\">'master'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>branch HEAD기반 생성</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> switch -c new-branch\nSwitched to a new branch <span class=\"token string\">'new-branch'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>branch 특정commit기반 생성 </p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">git</span> switch -c new-branch3 67b7c2d\nSwitched to a new branch <span class=\"token string\">'new-branch3'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>branch Reset<br>\n※ 브랜치 리셋을 하는 기능이 있긴한데, 이게 권고되는건지는 확인필요</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> switch --force-create new-branch   \nReset branch <span class=\"token string\">'new-branch'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p><a href=\"https://git-scm.com/docs/git-switch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git-switch reference</a></p>\n<h1 id=\"3-restore\"><a href=\"#3-restore\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. restore</h1>\n<p>HEAD로 restore </p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> restore test.md<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>stage에 올라간 파일 제외하기</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">git</span> restore --staged test.md<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p><a href=\"https://git-scm.com/docs/git-restore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git-restore reference</a></p>\n<h1 id=\"4-결론\"><a href=\"#4-%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 결론</h1>\n<p>git checkout보다는 switch, restore로 구분해서 사용하자. 그리고 해당 명령어에 전체 기능을 정리한게 아니기 때문에 다른 기능이 더 필요하다면 레퍼런스를 참조해서 진행하자. 기능을 하나씩 습득할때마다 그때마다 정리를 하자.</p>\n<h1 id=\"참조\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>참조</h1>\n<ul>\n<li><a href=\"https://blog.outsider.ne.kr/1505\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">새 버전에 맞게 git checkout 대신 switch/restore 사용하기 - Outsider's Dev Story</a></li>\n<li><a href=\"https://git-scm.com/docs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git reference</a></li>\n</ul>\n","category":["Git"]}]}}}