{"hash":"2fa6ab0ecb3495e1360f41420d946c20b3f2a3fc","data":null,"context":{"data":{"name":"FrontEnd","postList":[{"id":"b7126791b1897fd2a89ca9c8f13c3329","title":"Gridsome Sitemap Plugin 적용","content":"<!-- tags: ['Gridsome', 'sitemap', 'SEO'] -->\n<h1 id=\"배경\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배경</h1>\n<p>검색엔진 최적화(SEO) 중에 해야할 일중 하나가 sitemap을 생성하는 일이다.<br>\nsitemap은 사이트의 내용들을 담은 url들을 정리해놓은 xml파일이다.\n보통 robots.txt파일에 sitemap경로를 정의하기도 하지만 웹사이트 url 뒤에 /sitemap.xml을 입력해보면 보통 출력된다.\n예를들면 <a href=\"https://blog.zerost.com/sitemap.xml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.zerost.com/sitemap.xml</a> 처럼 말이다. </p>\n<h1 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>설치</h1>\n<p><a href=\"https://gridsome.org/plugins/@gridsome/plugin-sitemap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome plugin</a>에서 확인을 하게되면 </p>\n<blockquote>\n<p>@gridsome/plugin-sitemap</p>\n</blockquote>\n<p>을 찾는다. 문서가 잘되어있어서 왠만한건 해당 문서만 확인하고 설치가 가능하다.</p>\n<p>npm</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i @gridsome/plugin-sitemap<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>yarn</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @gridsome/plugin-sitemap<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>이렇게 설치를 하고 나서 나의 경우는 한해서 아래와 같이 설정만 해주면 끝이난다. sitemap.xml 파일은 사이트를 build를 한 경우만 생성이 되고 develop으로 서버를 부팅했을 경우는 접근이 안된다. </p>\n<pre class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    use<span class=\"token operator\">:</span> <span class=\"token string\">\"@gridsome/plugin-sitemap\"</span><span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"/ko/**\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                changefreq<span class=\"token operator\">:</span> <span class=\"token string\">\"weekly\"</span><span class=\"token punctuation\">,</span>\n                priority<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n                lastmod<span class=\"token operator\">:</span> <span class=\"token string\">\"2022-04-12\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"/about\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                changefreq<span class=\"token operator\">:</span> <span class=\"token string\">\"monthly\"</span><span class=\"token punctuation\">,</span>\n                priority<span class=\"token operator\">:</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>\n                lastmod<span class=\"token operator\">:</span> <span class=\"token string\">\"2022-04-12\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>결론</h1>\n<p>Markdown 파일들을 읽어서 자동으로 sitemap.xml까지 만들어주는 Gridsome 엔진. 설치도 간단하고, 문서도 친절하게 잘나와있다. 너무나도 마음에 든다.<br>\n해당 설정이 변경되면 이 문서도 같이 수정하도록 하겠다. 약간 수정이 필요한 것 같은게 lastmod 속성이 MD파일의 속성을 읽어서 출력해 줬으면 더 좋을 것 같다는 생각이 든다. 시간 되면 그렇게 할수있도록 수정을 조금 해봐야겠다.</p>\n<h1 id=\"참조\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>참조</h1>\n<ul>\n<li><a href=\"https://gridsome.org/plugins/@gridsome/plugin-sitemap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gridsome/plugin-sitemap</a></li>\n</ul>\n","category":["FrontEnd","Gridsome"]},{"id":"7fc4cc18e36e349a6bfc2db38fb45d52","title":"Gridsome 구글 애널리틱스 적용하기","content":"<!-- tags: ['Gridsome', '구글애널리틱스', 'GoogleAnalytics', 'analytics']-->\n<h1 id=\"배경\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배경</h1>\n<p>구글 애널리틱스를 적용하게 되면 사이트에 몇명이 방문하는지, 어떤 경로로, 어떤 검색어로 찾아오는지 알 수 있다.\n뭐 신생 블로그다 보니까 당연히 들어오는 사람도 없겠지만, 언젠가는 내가 쓴 글이 다른사람에게 도움이 될 수 도 있는 것이라고 생각한다.<br>\n그래서 반응도 확인할 겸 등록하게 되었다.</p>\n<h1 id=\"설치\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>설치</h1>\n<p>Gridsome에 플러그인이 있는지 처음 확인을 했었다. </p>\n<blockquote>\n<p>@gridsome/plugin-google-analytics</p>\n</blockquote>\n<p>라는것이 있기에 이걸 적용하면 되는 줄 알았다. 그런데 이 플러그인을 적용했는데도, 크롬 개발자 도구에 네트워크 요청도 없었다. 이상하다고 생각해서 문서를 보다보니 <a href=\"https://github.com/MatteoGabriele/vue-analytics/blob/master/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vue-analytics</a>를 참조해서 개발이 된걸로 추측이 된다.  </p>\n<p>그런데 사이트 들어가보니...</p>\n<blockquote>\n<p>⚠️ Sorry but vue-analytics is not longer maintained. I would suggest you to switch to vue-gtag. With love, the guy who made the package.</p>\n</blockquote>\n<p>라고 되어있다. vue-gtag를 사용하란다..\n그래서 gtag로 검색을 했더니</p>\n<blockquote>\n<p>gridsome-plugin-gtag</p>\n</blockquote>\n<p>패키지가 있다. 이 패키지를 설치했다.</p>\n<p>npm</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i gridsome-plugin-gtag<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>yarn</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> gridsome-plugin-gtag<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p>그리고</p>\n<p>gridsome.config.js 파일에 추가를 했더니 정상작동한다!</p>\n<pre class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    use<span class=\"token operator\">:</span> 'gridsome-plugin-gtag'<span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            id<span class=\"token operator\">:</span> '<span class=\"token punctuation\">[</span>GOOGLE_ANALYTICS_ID<span class=\"token punctuation\">]</span>'\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>결론</h1>\n<p>설치하고 났더니 방문자를 알 수 있어서 좋다.<br>\n근데, Gridsome plugins 페이지에서 @gridsome/plugin-google-analytics 이건 좀 지워야 되는거 아닌지 모르겠다.</p>\n<h1 id=\"참조\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>참조</h1>\n<ul>\n<li><a href=\"https://gridsome.org/plugins/gridsome-plugin-gtag\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gridsome Plugin to incorporate Google Tag</a></li>\n<li><a href=\"https://gridsome.org/plugins/@gridsome/plugin-google-analytics\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gridsome/plugin-google-analytics</a></li>\n<li><a href=\"https://github.com/MatteoGabriele/vue-analytics/blob/master/README.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vue-analytics</a></li>\n</ul>\n","category":["FrontEnd","Gridsome"]},{"id":"f0979249b4203593a1e07be3ccb1b458","title":"블로그를 Gridsome을 선택한 이유","content":"<!-- tags: ['Gridsome', 'vue3', 'vuejs'] -->\n<h1 id=\"배경\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배경</h1>\n<p><a href=\"/ko/posts/blog/%EC%97%90%EC%84%B8%EC%9D%B4/%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%9C-%EC%9D%B4%EC%9C%A0%EC%99%80-%EB%AA%A9%ED%91%9C\">블로그를 시작한 이유와 목표</a>에서 작성했듯이 블로그를 운영하고 싶었고,정적인 사이트를 개발해서 <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github pages</a>에 배포를 하고 싶었다. 이걸 사용함으로서 비용도 없고 원하는데로 사이트를 구성 할수도 있었을 줄 알았다.</p>\n<h1 id=\"진행\"><a href=\"#%EC%A7%84%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>진행</h1>\n<ol>\n<li>github 블로그를 어떻게 개발하는지에 대해서 검색하다보니 <a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jekyll</a>이 검색되었다.<br>\n블로그 테마 갯수도 많고 꽤나 활성화 되어 있는듯 했다.\n일단 인터넷에 나와있는 정보를 바탕으로 jekyll과 테마를 설치했다.\n근데, 문제는 테마 그대로 사용할 생각이 있는게 아니고 조금씩 수정해가면서 사용하고 싶었는데, 루비를 처음 접하고\n처음 접하다보니 도저히 수정할 엄두가 나질 않았다.<br>\n그래서 이건 아니다 싶어서 node.js로 된 블로그 엔진을 찾았다. 그래야 조금이라도 수정할 수 있을꺼라고 생각했다.  </li>\n<li>node.js용 블로그 프레임워크. <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hexo</a>를 찾았다. 이것도 테마가 있긴 있었는데,\n확실히 jekyll보다는 적은듯했다. 여튼, 그중에서 가장 심플하면서도 직관적인 테마를 선택했다. 그래서 설치했는데,\n생각보다 내가 원하는데로 작동하지는 않는듯했고, 수정해야겠다 싶어서 소스를 확인하는데도, 이것 또한 만만하게 볼만하지 않았다.\n그래서 그냥 Vue.js로 된 블로그 프레임워크를 찾아야겠다 싶어서 이것도 결국 삭제했다.  </li>\n<li>Vue.js 로 개발된 블로그를 검색했다. 그랬더니 가장 유명한게 <a href=\"https://vuepress.vuejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vuepress</a>였다.\nvuejs에서 만든 프레임워크인데, 이것도 깔끔하고 괜찮긴한데, 내가 원하는 레이아웃을 만들어 내기에는 조금 문제가 있었다.\n일단 복잡하다. 테마를 새로 만드는 과정도 생각보다 어려웠고 꼬박 이틀동안 연구를 했는데도 쉽지 않았다.<br>\n(물론 아직 능력이 부족해서 그런 부분이 컸다.)<br>\n그리고 Document가 꽤나 부실했다. 그것만보고는 어떻게 사용해야하는지 이해가 쉽지 않았다.  </li>\n<li>대망의 마지막 Gridsome. Vuepress관련해서 검색을 하다보니 우연찮게 vuepress와 gridsome을 비교해놓은 블로그가\n검색이 되었다. 그래서 혹시나 해서 Gridsome에 들어가서 보니 괜찮아 보였다. GraphQL이라는것도 적용이 되어있고,\n문서도 꽤나 구체적으로 나와있는듯했다. 그래서 설치를 해보니, 정말 내가 원하는 그것이었다.<br>\n아주 기초적으로 md파일들을 읽어와서 메모리에 올린후 GraphQL로 쿼리를 날려서 데이터를 산출하고 Vue.js를 통해서\n화면을 렌더링. 그리고 무엇보다도 쉽게 잘 구현되어있고, 문서가 Vuepress에 비해서 아주 이해하기 쉽고 직관적이었다.\n100% 만족은 아니지만 상당후 문서만 보고도 이해할 수 있는 수준이었다. 지금 이렇게 조금씩 만들어가는데, 너무 재밌다.</li>\n</ol>\n<h1 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>결론</h1>\n<p>정적 블로그를 운영할 계획이라면 각자에게 맞는 정적 블로그 생성 엔진을 찾아서 사용하는게 맞을 것 같다.\n나는 최초에 접근성이 쉽고, 각 페이지 컨트롤도 쉬운 엔진을 찾았는데, 결국 Gridsome에 안착하게 되었다.\n아주 만족스럽다. 기본적인 파싱 구조를 갖춰진 상태에서 블로그 디자인부터 퍼블리싱까지 할 예정이라서\n정말 딱 이었다. 다만 걱정인게 Gridsome github에 마지막 커밋이 2020년 9월 23일인데 그 이후로 무언가 커밋이 없는게 약간 불안하긴 하다. 관리가 되고 있긴한거겠지.</p>\n","category":["FrontEnd","Gridsome"]},{"id":"505811fab357630089775ae32ea5d7eb","title":"Vue3 script setup","content":"<h1 id=\"1-script-setup란\"><a href=\"#1-script-setup%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. &#x3C;script setup>란?</h1>\n<p>&#x3C;script setup>은 SFC(Single File Components)내에서 Composition API를 사용하기 위해서 권장되는 구문이다. &#x3C;script> 구문에 비해 몇가지 나은점을 제공한다.</p>\n<p>공식사이트에는 아래와 같은 내용이 있다.</p>\n<ul>\n<li>More succinct code with less boilerplate</li>\n<li>Ability to declare props and emitted events using pure TypeScript</li>\n<li>Better runtime performance (the template is compiled into a render function in the same scope, without an intermediate proxy)</li>\n<li>Better IDE type-inference performance (less work for the language -server to extract types from code)</li>\n</ul>\n<p>개인적으로 느낀바로는 변수나 객체등을 또 다시 return 구문에 입력하지 않아도 됨으로서, return 구문이 비대해지거나 return 기입시 오타등으로 인해서 예기치 않는 오류만 발생하지 않는 것 만으로도 매우 훌륭하다고 느낀다. 코드도 훨씬 깔끔해진다.</p>\n<h1 id=\"2-composition-api와-script-setup-비교\"><a href=\"#2-composition-api%EC%99%80-script-setup-%EB%B9%84%EA%B5%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Composition API와 &#x3C;script setup> 비교</h1>\n<h2 id=\"composition-api\"><a href=\"#composition-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Composition API</h2>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"increment\"</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">count</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> reactive <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span><span class=\"token property-access\">count</span><span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// don't forget to expose the function as well.</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">,</span>\n      increment\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"script-setup\"><a href=\"#script-setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>&#x3C;script setup></h2>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> reactive <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token punctuation\">.</span><span class=\"token property-access\">count</span><span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"increment\"</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">count</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>단순히 count만 증가시키는 모듈이지만 코드 라인수도 줄어들고, 간결하다. &#x3C;script setup>에서 선언한 변수나 함수를 return할 필요 없이 template에서 바로 사용할 수 있다. 변수가 한개 인데도 코드가 많이 줄어든다. 변수 갯수만큼 라인수가 늘어나는거라 복잡도가 높은 변수가 많은 프로그램일수록 소스가 간결해지는 효과는 좋다.</p>\n<h1 id=\"3-using-components\"><a href=\"#3-using-components\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Using Components</h1>\n<p>컴포넌트 사용법. 컴포넌트 사용법도 정말 간단하다 단순하게 import만 해주게 되면 template에서 사용 할 수 있다. 기존 Composition API보다 간결하다.</p>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">MyComponent</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./MyComponent.vue'</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">MyComponent</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"dynamic-components\"><a href=\"#dynamic-components\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dynamic Components</h2>\n<p>동적으로 조건에따라서 컴포넌트 사용</p>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Foo</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./Foo.vue'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">Bar</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./Bar.vue'</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"Foo\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>component <span class=\"token operator\">:</span>is<span class=\"token operator\">=</span><span class=\"token string\">\"someCondition ? Foo : Bar\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"recursive-components\"><a href=\"#recursive-components\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Recursive Components</h2>\n<p>컴포넌트 이름이 동일하거나 이름을 변경이 필요하다면 아래와 같이 사용할 수 있다.</p>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">FooBar</span> <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">FooBarChild</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./components'</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h1 id=\"4-top-level-await\"><a href=\"#4-top-level-await\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Top-level await</h1>\n<p>await 문법도 사용가능하다. 다만, Suspense와 함께 사용되어야 한다.</p>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script setup<span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> post <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/api/post/1</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> r<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"5-typescript-기능\"><a href=\"#5-typescript-%EA%B8%B0%EB%8A%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. TypeScript 기능</h1>\n<p>타입 스크립트도 지원한다. </p>\n<h2 id=\"type-only-propsemit-declarations\"><a href=\"#type-only-propsemit-declarations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Type-only props/emit declarations</h2>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> defineProps<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> string\n  bar<span class=\"token operator\">?</span><span class=\"token operator\">:</span> number\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> emit <span class=\"token operator\">=</span> defineEmits<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token string\">'update'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"default-props-values-when-using-type-declaration\"><a href=\"#default-props-values-when-using-type-declaration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Default props values when using type declaration</h2>\n<pre class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Props</span> <span class=\"token punctuation\">{</span>\n  msg<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string\n  labels<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token function\">withDefaults</span><span class=\"token punctuation\">(</span>defineProps<span class=\"token operator\">&lt;</span><span class=\"token maybe-class-name\">Props</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">msg</span><span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">labels</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"6-마치며\"><a href=\"#6-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. 마치며</h1>\n<p>Vue.js 3를 사용하고 있다면 무조건 적용해야 하는 것 같다. 토이프로젝트에  모듈들이 Composition API로 적용되어 있었다. &#x3C;script setup> 부분으로 하나씩 고쳐가고 있는데, 별도로 시간을 들여서 수정할만 하다. 소스가 간결해지는 부분이 참으로 만족스럽다. </p>\n<h1 id=\"9-참조\"><a href=\"#9-%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. 참조</h1>\n<ul>\n<li><a href=\"https://vuejs.org/api/sfc-script-setup.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">&#x3C;script setup> - Vue.js 공식사이트</a>  </li>\n<li><a href=\"https://vuejs.org/guide/introduction.html#api-styles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API styles - Vue.js 공식사이트</a></li>\n</ul>\n","category":["FrontEnd","Vue3"]},{"id":"f2d3dcd5d04ec8eaab84d8a870d01cbf","title":"Vue CLI 빌드시 public 폴더 하위 특정폴더 제외하기","content":"<h1 id=\"배경\"><a href=\"#%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>배경</h1>\n<p>Vue.js CLI에서 빌드시 public 폴더중에 일부 폴더는 제외를 하고 싶었다. 이유는 해당 폴더는 파일업로드가 되는 폴더라서\n굳이 빌드할때 copy가 될 필요는 없었다. 그래서 해당 방법을 한참 찾았다. 그리고는 결국 찾아내고 말았다.</p>\n<h1 id=\"환경\"><a href=\"#%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>환경</h1>\n<p>Vue CLI: 4.5.17</p>\n<h1 id=\"진행\"><a href=\"#%EC%A7%84%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>진행</h1>\n<p>vue.config.js 파일에 아래부분을 추가한다.</p>\n<pre class=\"language-json line-numbers\"><code class=\"language-json\">module.exports = <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n  chainWebpack<span class=\"token operator\">:</span> config => <span class=\"token punctuation\">{</span>\n    config.plugin('copy').tap((<span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span>) => <span class=\"token punctuation\">{</span>\n      options<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.ignore.push('files<span class=\"token comment\">/**')\n      return [options]\n    })\n  }\n  //...\n}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>결론</h1>\n<p>해당 files/** 에 해당하는 부분에 제외하고자 하는 폴더를 넣고 빌드하니 정상 제외된다.</p>\n","category":["FrontEnd","Vue3"]},{"id":"88f16e93d454fd860827533a02bc5e96","title":"vue-router 개발자 도구에서 오류","content":"<h2 id=\"오류\"><a href=\"#%EC%98%A4%EB%A5%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[오류]</h2>\n<h3 id=\"환경\"><a href=\"#%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>환경</h3>\n<p>OS: Windows 10<br>\nVue: 3.2.31<br>\nVue router: 4.0.14  </p>\n<hr>\n<p>vue를 브라우저 개발자 도구(devtools)를 실행시키고 실행하다보면 아래와 같은 오류가 발생한 경우가 나온다.<br>\n(개발자 도구를 실행하지 않은 경우는 발생하지 않음)</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">vue-router.esm-bundler.js?6c02:2489 Uncaught <span class=\"token punctuation\">(</span>in promise<span class=\"token punctuation\">)</span> TypeError: api.now is not a <span class=\"token keyword\">function</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h2 id=\"원인확인\"><a href=\"#%EC%9B%90%EC%9D%B8%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[원인확인]</h2>\n<p>버전 문제 이지 않을까 검색을 해보았다. 검색 해본 결과 버전문제가 맞는 듯 했다.</p>\n<h2 id=\"결론\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[결론]</h2>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> remove vue-router\nyear <span class=\"token function\">add</span> vue-router@4.0.13<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>검색한 내용을 토대로 버전을 이전버전으로 돌리니 개발자도구(devtools)에서도 오류 없이 정상적으로 작동했다.</p>\n<h2 id=\"참고자료\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[참고자료]</h2>\n<p><a href=\"https://github.com/vuejs/router/issues/1338\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Router not working on 4.0.14 -> Use the vue-devtools stable to solve this #1338</a></p>\n","category":["FrontEnd","Vue3"]}]}}}