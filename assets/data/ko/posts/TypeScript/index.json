{"hash":"d58beb22d9b3a38b1f81c0b89e7fffe66b876250","data":null,"context":{"data":{"name":"TypeScript","postList":[{"id":"154b308fdf4ebfcd2e12ec447e325feb","title":"TypeScript 기본타입","content":"<h1 id=\"1-primitives-type윈시-타입\"><a href=\"#1-primitives-type%EC%9C%88%EC%8B%9C-%ED%83%80%EC%9E%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Primitives Type(윈시 타입)</h1>\n<ul>\n<li>\n<p>string<br>\n기본적인 문자열. \"Hello, world\"와 같은 문자열</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> msg<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> myName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>number\n자바스크립트에는 int, float형이 있는데 두개를 구분하지 않고 심플하게 number로 사용</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> size<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> size2<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>boolean<br>\ntrue와 false 두가지 값이 있음</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> isBig<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isSmall<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<p>변수 선언시(const, let) 타입을 표기를 안하게되면 컴파일러가 알아서 추론을 해서 선언하게 된다. 하지만 명시적으로 표기하는 것이 유지보수시에도 도움이 되고, 선언하지 않을꺼라면 굳이 타입스크립트를 사용하지 않고 Javascript를 사용해도 될 것 같다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">'this is message'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//string 타입으로 추론 해줌(개인적으로 비추천함)</span>\n<span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//number 타입으로 추론</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"2-arrays배열\"><a href=\"#2-arrays%EB%B0%B0%EC%97%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Arrays(배열)</h1>\n<p>number형 배열 타입은 number[], string타입은 string[] 으로 선언하면 된다. Array\\<number>나 Array\\<string> 으로 작성해도 된다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> values<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> values2<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"3-any\"><a href=\"#3-any\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Any</h1>\n<p>Any타입은 어떠한 값도 다 포함될 수 있는 값이다. Primitives Type이나 Array, 심지어 function까지 모두 다 들어갈수 있는 값이다. 이 타입은 굳이 사용하지 않은 것이 맞는 것 같다. 이걸 사용한다면 굳이 타입스크립트를 사용할 필요가 없는 것이다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">let</span> value<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nvalue <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//오류 미발생</span>\n<span class=\"token function-variable function\">value</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//오류 미발생</span>\n<span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//오류 미발생</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"4-function-함수\"><a href=\"#4-function-%ED%95%A8%EC%88%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. function (함수)</h1>\n<p>paramter와 return 타입에 설정가능하다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//4 출력</span>\n\n<span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Paramter타입오류 발생</span>\n<span class=\"token keyword\">const</span> n<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Return타입 오류 발생</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"5-enums\"><a href=\"#5-enums\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Enums</h1>\n<h2 id=\"숫자-열거형numeric-enums\"><a href=\"#%EC%88%AB%EC%9E%90-%EC%97%B4%EA%B1%B0%ED%98%95numeric-enums\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>숫자 열거형(Numeric enums)</h2>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Direction <span class=\"token punctuation\">{</span>\n  Up <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  Down<span class=\"token punctuation\">,</span>\n  Left<span class=\"token punctuation\">,</span>\n  Right\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  Up을 1로 선언했음. 그 이후에 선언되는 값은 1씩 증가한값이다. 그로 인해서 Down = 2, Left = 3, Right = 4가 된다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Direction <span class=\"token punctuation\">{</span>\n  Up<span class=\"token punctuation\">,</span>\n  Down<span class=\"token punctuation\">,</span>\n  Left<span class=\"token punctuation\">,</span>\n  Right\n<span class=\"token punctuation\">}</span> <span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  아무런 값을 셋팅하지 않은 경우는 최상위부터 0으로 시작한다. Up = 0, Down = 1, Left = 2, Right = 3이 된다.</p>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Direction <span class=\"token punctuation\">{</span>\n  Up<span class=\"token punctuation\">,</span>  <span class=\"token comment\">//0</span>\n  Down <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//6</span>\n  Left<span class=\"token punctuation\">,</span> <span class=\"token comment\">//7</span>\n  Right <span class=\"token comment\">//8</span>\n<span class=\"token punctuation\">}</span> <span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  상위값부터 0으로 셋팅되고, Down = 6으로 셋팅을 할 경우, 그 다음부터 1씩 증가한다. Left = 7, Right = 8이 된다.</p>\n<h2 id=\"문자-열거형string-enums\"><a href=\"#%EB%AC%B8%EC%9E%90-%EC%97%B4%EA%B1%B0%ED%98%95string-enums\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>문자 열거형(String enums)</h2>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> Direction <span class=\"token punctuation\">{</span>\n  Up <span class=\"token operator\">=</span> <span class=\"token string\">\"UP\"</span><span class=\"token punctuation\">,</span>\n  Down <span class=\"token operator\">=</span> <span class=\"token string\">\"DOWN\"</span><span class=\"token punctuation\">,</span>\n  Left <span class=\"token operator\">=</span> <span class=\"token string\">\"LEFT\"</span><span class=\"token punctuation\">,</span>\n  Right <span class=\"token operator\">=</span> <span class=\"token string\">\"RIGHT\"</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"이종-열거형heterogeneous-enums\"><a href=\"#%EC%9D%B4%EC%A2%85-%EC%97%B4%EA%B1%B0%ED%98%95heterogeneous-enums\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이종 열거형(Heterogeneous enums)</h2>\n<pre class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">enum</span> BooleanLikeHeterogeneousEnum <span class=\"token punctuation\">{</span>\n  No <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  Yes <span class=\"token operator\">=</span> <span class=\"token string\">\"YES\"</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>  값을 숫자형과 문자형을 혼합해서 사용. 굳이 이렇게 사용할 필요는 없고, 권장하지 않는다고 함.</p>\n<h1 id=\"6-마치며\"><a href=\"#6-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. 마치며</h1>\n<p>TypeScript의 타입은 인터페이스, 함수타입, 클래스등 더 많은 타입이 있지만 기본타입에서는 여기까지만 정리하였다. </p>\n<h1 id=\"9-참조\"><a href=\"#9-%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. 참조</h1>\n<ul>\n<li><a href=\"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Everyday Types - TypeScript 공식홈페이지</a></li>\n<li><a href=\"https://www.inflearn.com/course/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">타입스크립트 시작하기 - 인프런</a></li>\n</ul>\n","category":["TypeScript"]},{"id":"cfde60f01d596c43d45d040fe016c039","title":"TypeScript개념과 설치","content":"<h1 id=\"1-typescript란\"><a href=\"#1-typescript%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. TypeScript란?</h1>\n<p>   타입스크립트(TypeScript)는 자바스크립트의 슈퍼셋인 오픈소스 프로그래밍 언어이다. 마이크로소프트에서 개발, 유지하고 있으며 엄격한 문법을 지원한다. 타입스크립트는 자바스크립트 엔진을 사용하면서 커다란 애플리케이션을 개발할 수 있게 설계된 언어이다. 타입스크립트에서 자신이 원하는 타입을 정의하고 프로그래밍을 하면 자바스크립트로 컴파일되어 실행할 수 있다.  </p>\n<h1 id=\"2-typescript-vs-javascript\"><a href=\"#2-typescript-vs-javascript\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. TypeScript vs JavaScript</h1>\n<table>\n<thead>\n<tr>\n<th>분류</th>\n<th>TypeScript</th>\n<th>JavaScript</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Data Type</td>\n<td>Static Type</td>\n<td>Dynamic Type</td>\n</tr>\n<tr>\n<td>CompileTime/RunTime</td>\n<td>CompileTime</td>\n<td>Runtime</td>\n</tr>\n<tr>\n<td>생산성↑</td>\n<td>코드의 양이 많은 경우</td>\n<td>코드의 양이 적은 경우</td>\n</tr>\n<tr>\n<td>타입오류발생</td>\n<td>컴파일</td>\n<td>런타임</td>\n</tr>\n<tr>\n<td>IDE 오류</td>\n<td>잘못된 타입을 사용을 한 경우 .0오류 발생</td>\n<td>오류 발생하지 않음</td>\n</tr>\n<tr>\n<td>IDE 리팩토링</td>\n<td>TYPE이 이미 정해져있기때문에 IDE에서 리팩토링 가능</td>\n<td>IDE에서 지원하는 리팩토링은 불가(가능하더라도 정확하지 않음)</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"3-typescript-설치\"><a href=\"#3-typescript-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. TypeScript 설치</h1>\n<p>npm을 설치한다. 기본적으로 nodejs는 설치되어있어야 한다. npm init -y 명령어 실행</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y\nWrote to C:<span class=\"token punctuation\">\\</span>workspace<span class=\"token punctuation\">\\</span>typescript<span class=\"token punctuation\">\\</span>package.json:\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"typescript\"</span>,\n  <span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1.0.0\"</span>,\n  <span class=\"token string\">\"description\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n  <span class=\"token string\">\"main\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"index.js\"</span>,\n  <span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"echo <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>Error: no test specified<span class=\"token entity\" title=\"\\&quot;\">\\\"</span> &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span>,\n  <span class=\"token string\">\"keywords\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,\n  <span class=\"token string\">\"author\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>,\n  <span class=\"token string\">\"license\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>package.json 파일이 생성되었다.</p>\n<p>이제 TypeScript를 설치한다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> typescript\n\nadded <span class=\"token number\">1</span> package, and audited <span class=\"token number\">2</span> packages <span class=\"token keyword\">in</span> 2s\n\nfound <span class=\"token number\">0</span> vulnerabilities<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"4-typescript-모듈-조회-사이트\"><a href=\"#4-typescript-%EB%AA%A8%EB%93%88-%EC%A1%B0%ED%9A%8C-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. TypeScript 모듈 조회 사이트</h1>\n<p><a href=\"https://www.typescriptlang.org/dt/search?search=\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">type search - typescriptlang.org</a></p>\n<p>예) react검색시 아래와같이 조회됨. @types..로 시작하는 모듈이 typescript로 개발된 패키지이다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i react\n<span class=\"token function\">npm</span> i @types/react --save-dev<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"5-마치며\"><a href=\"#5-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. 마치며</h1>\n<p>  최근들어 Javascript로 개발된 framework의 문서들에도 타입스크립트의 내용이 점점 추가 되고 있고, 최근 개발된 framework의 소스를 확인해봐도 대부분 타입스크립트로 개발되어 있음을 알 수 있었다. 규모가 있는 프로그램을 개발하려고 한다면 Typescript는 이제 기본이 된듯하다.</p>\n<h1 id=\"6-참조\"><a href=\"#6-%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. 참조</h1>\n<ul>\n<li><a href=\"https://ko.wikipedia.org/wiki/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">타입스크립트 - 위키백과</a></li>\n<li><a href=\"https://any-ting.tistory.com/97\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">[TypeScript] TypeScript 개념 및 사용하는 이유</a>  </li>\n<li><a href=\"https://www.inflearn.com/course/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">타입스크립트 시작하기 - 인프런</a></li>\n</ul>\n","category":["TypeScript"]}]}}}