{"hash":"08c8e77e5a5321ae3040b0740528b4fa6a67eda8","data":{"markdownPost":{"title":"SpringBoot Web MVC ResponseEntity","content":"<h1 id=\"responseentity란\"><a href=\"#responseentity%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResponseEntity란?</h1>\n<p>Spring Framework에서 제공하는 클래스 중 HttpEntity라는 클래스가 존재한다. 이것은 HTTP 요청(Request) 또는 응답(Response)에 해당하는 HttpHeader와 HttpBody를 포함하는 클래스이다.</p>\n<h2 id=\"http-상태코드\"><a href=\"#http-%EC%83%81%ED%83%9C%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Http 상태코드</h2>\n<ul>\n<li>1xx (정보): 요청을 받았으며 프로세스를 계속한다</li>\n<li>2xx (성공): 요청을 성공적으로 받았으며 인식했고 수용하였다</li>\n<li>3xx (리다이렉션): 요청 완료를 위해 추가 작업 조치가 필요하다</li>\n<li>4xx (클라이언트 오류): 요청의 문법이 잘못되었거나 요청을 처리할 수 없다</li>\n<li>5xx (서버 오류): 서버가 명백히 유효한 요청에 대해 충족을 실패했다</li>\n</ul>\n<h1 id=\"kotlin---springboot\"><a href=\"#kotlin---springboot\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kotlin - SpringBoot</h1>\n<h2 id=\"controller-예제\"><a href=\"#controller-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Controller 예제</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@RestController\n@RequestMapping(\"/api\")\nclass ResponseApiController {\n    // 1. Get 4xx\n    // Get http://locaLhost:8080/api/repose?age=10\n    @GetMapping(\"\")\n    fun getMapping(@RequestParam age: Int?): ResponseEntity<String> {\n        return age?.let {\n            if (age < 20) {\n                return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"age 값은 20보다 커야합니다.\")\n            }\n            ResponseEntity.ok(\"OK\")\n        }?: kotlin.run {\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"age 값이 누락되었습니다.\")\n        }\n    }\n\n    // 2. Post 200\n    @PostMapping(\"\")\n    fun postMapping(@RequestBody userRequestDto: UserRequestDto?): ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.OK).body(userRequestDto)\n    }\n\n    // 3. Put 201\n    @PutMapping\n    fun putMapping(@RequestBody userRequestDto: UserRequestDto?): ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.CREATED).body(userRequestDto)\n    }\n\n    // 4. delete 500\n    fun deleteMapping(@PathVariable id: Int) : ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null)\n    }\n}<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"출처\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>출처</h1>\n<ul>\n<li>ResponseEntity란? - <a href=\"https://devlog-wjdrbs96.tistory.com/182\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://devlog-wjdrbs96.tistory.com/182</a>  </li>\n<li>Http 상태코드 - <a href=\"https://ko.wikipedia.org/wiki/HTTP_%EC%83%81%ED%83%9C_%EC%BD%94%EB%93%9C\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ko.wikipedia.org/wiki/HTTP_%EC%83%81%ED%83%9C_%EC%BD%94%EB%93%9C</a>  </li>\n<li>인프런: 스프링부트-코틀린 - <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0</a></li>\n</ul>\n","date":"2022-09-18T10:22:00.000Z","category":["Kotlin","SpringBoot"],"lang":"ko"}},"context":{}}