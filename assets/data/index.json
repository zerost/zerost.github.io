{"hash":"08c8e77e5a5321ae3040b0740528b4fa6a67eda8","data":{"posts":{"edges":[{"node":{"id":"44b04985ddf818570083ef9f1843d2ba","title":"SpringBoot Web MVC DELETE","content":"<h1 id=\"delete의개념\"><a href=\"#delete%EC%9D%98%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DELETE의개념</h1>\n<p>HTTP DELETE 메서드는 지정한 리소스를 삭제합니다.</p>\n<h2 id=\"예제\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예제</h2>\n<h3 id=\"요청\"><a href=\"#%EC%9A%94%EC%B2%AD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>요청</h3>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">DELETE /file.html HTTP/1.1<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h3 id=\"응답\"><a href=\"#%EC%9D%91%EB%8B%B5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>응답</h3>\n<ul>\n<li>아마도 명령을 성공적으로 수행할 것 같으나 아직은 실행하지 않은 경우 202 (Accepted) 상태 코드.</li>\n<li>명령을 수행했고 더 이상 제공할 정보가 없는 경우 204 (No Content) 상태 코드.</li>\n<li>명령을 수행했고 응답 메시지가 이후의 상태를 설명하는 경우 200 (OK) 상태 코드.</li>\n</ul>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">HTTP/1.1 200 OK\nDate: Wed, 21 Oct 2015 07:28:00 GMT\n\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;File deleted.&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"kotlin---springboot\"><a href=\"#kotlin---springboot\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kotlin - SpringBoot</h1>\n<h2 id=\"controller-예제\"><a href=\"#controller-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Controller 예제</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@RestController\n@RequestMapping(\"/api\")\nclass DeleteApiController {\n\n    // URL : /api/delete-mapping?name=test&age=22\n    @DeleteMapping(path = [\"/delete-mapping\"])\n    fun deleteMapping(\n        @RequestParam(value = \"name\") _name : String,\n        @RequestParam(value = \"age\") _age : Int,\n    ): String {\n        println(_name)\n        println(_age)\n        return _name + \" \" + _age\n    }\n\n    // URL : /api/delete-mapping/name/{name}/age/{age}\n    @DeleteMapping(path = [\"/delete-mapping/name/{name}/age/{age}\"])\n    fun deleteMappingPath(\n        @PathVariable(value = \"name\") _name : String,\n        @PathVariable(value = \"age\") _age : Int,\n    ): String {\n        println(_name)\n        println(_age)\n        return _name + \" \" + _age\n    }\n}<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"출처\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>출처</h1>\n<ul>\n<li>DELETE의 개념, 예제 - <a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Methods/DELETE\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/HTTP/Methods/DELETE</a>  </li>\n<li>인프런: 스프링부트-코틀린 - <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0</a></li>\n</ul>\n","lang":"ko","category":["Kotlin","SpringBoot"],"date":"2022-09-19T10:25:00.000Z"}},{"node":{"id":"5c7526fd7389af200a777e6035a7f060","title":"SpringBoot Web MVC ResponseEntity","content":"<h1 id=\"responseentity란\"><a href=\"#responseentity%EB%9E%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ResponseEntity란?</h1>\n<p>Spring Framework에서 제공하는 클래스 중 HttpEntity라는 클래스가 존재한다. 이것은 HTTP 요청(Request) 또는 응답(Response)에 해당하는 HttpHeader와 HttpBody를 포함하는 클래스이다.</p>\n<h2 id=\"http-상태코드\"><a href=\"#http-%EC%83%81%ED%83%9C%EC%BD%94%EB%93%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Http 상태코드</h2>\n<ul>\n<li>1xx (정보): 요청을 받았으며 프로세스를 계속한다</li>\n<li>2xx (성공): 요청을 성공적으로 받았으며 인식했고 수용하였다</li>\n<li>3xx (리다이렉션): 요청 완료를 위해 추가 작업 조치가 필요하다</li>\n<li>4xx (클라이언트 오류): 요청의 문법이 잘못되었거나 요청을 처리할 수 없다</li>\n<li>5xx (서버 오류): 서버가 명백히 유효한 요청에 대해 충족을 실패했다</li>\n</ul>\n<h1 id=\"kotlin---springboot\"><a href=\"#kotlin---springboot\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kotlin - SpringBoot</h1>\n<h2 id=\"controller-예제\"><a href=\"#controller-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Controller 예제</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@RestController\n@RequestMapping(\"/api\")\nclass ResponseApiController {\n    // 1. Get 4xx\n    // Get http://locaLhost:8080/api/repose?age=10\n    @GetMapping(\"\")\n    fun getMapping(@RequestParam age: Int?): ResponseEntity<String> {\n        return age?.let {\n            if (age < 20) {\n                return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"age 값은 20보다 커야합니다.\")\n            }\n            ResponseEntity.ok(\"OK\")\n        }?: kotlin.run {\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"age 값이 누락되었습니다.\")\n        }\n    }\n\n    // 2. Post 200\n    @PostMapping(\"\")\n    fun postMapping(@RequestBody userRequestDto: UserRequestDto?): ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.OK).body(userRequestDto)\n    }\n\n    // 3. Put 201\n    @PutMapping\n    fun putMapping(@RequestBody userRequestDto: UserRequestDto?): ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.CREATED).body(userRequestDto)\n    }\n\n    // 4. delete 500\n    fun deleteMapping(@PathVariable id: Int) : ResponseEntity<Any> {\n        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null)\n    }\n}<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"출처\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>출처</h1>\n<ul>\n<li>ResponseEntity란? - <a href=\"https://devlog-wjdrbs96.tistory.com/182\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://devlog-wjdrbs96.tistory.com/182</a>  </li>\n<li>Http 상태코드 - <a href=\"https://ko.wikipedia.org/wiki/HTTP_%EC%83%81%ED%83%9C_%EC%BD%94%EB%93%9C\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://ko.wikipedia.org/wiki/HTTP_%EC%83%81%ED%83%9C_%EC%BD%94%EB%93%9C</a>  </li>\n<li>인프런: 스프링부트-코틀린 - <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0</a></li>\n</ul>\n","lang":"ko","category":["Kotlin","SpringBoot"],"date":"2022-09-18T10:22:00.000Z"}},{"node":{"id":"1cebe7f1ec36075dce004aa0ac9acaac","title":"SpringBoot Web MVC PUT","content":"<h1 id=\"put의개념\"><a href=\"#put%EC%9D%98%EA%B0%9C%EB%85%90\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Put의개념</h1>\n<p>HTTP PUT 메서드는 요청 페이로드를 사용해 새로운 리소스를 생성하거나, 대상 리소스를 나타내는 데이터를 대체합니다.\nPUT과 POST의 차이는 멱등성으로, PUT은 멱등성을 가집니다. PUT은 한 번을 보내도, 여러 번을 연속으로 보내도 같은 효과를 보입니다. 즉, 부수 효과가 없습니다.  </p>\n<p>※ 멱등성<br>\n동일한 요청을 한 번 보내는 것과 여러 번 연속으로 보내는 것이 같은 효과를 지니고, 서버의 상태도 동일하게 남을 때, 해당 HTTP 메서드가 멱등성을 가졌다고 말합니다.\n다른 말로는, 멱등성 메서드에는 통계 기록 등을 제외하면 어떠한 부수 효과(side effect)도 존재해서는 안됩니다.\n올바르게 구현한 경우 GET, HEAD, PUT, DELETE 메서드는 멱등성을 가지며, POST 메서드는 그렇지 않습니다. 모든 안전한 메서드는 멱등성도 가집니다.</p>\n<h2 id=\"예제\"><a href=\"#%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>예제</h2>\n<h3 id=\"요청\"><a href=\"#%EC%9A%94%EC%B2%AD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>요청</h3>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">PUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n&lt;p&gt;New File&lt;/p&gt;<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"응답\"><a href=\"#%EC%9D%91%EB%8B%B5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>응답</h3>\n<p>데이터가 생성된 경우 </p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">HTTP/1.1 201 Created\nContent-Location: /new.html<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<p>데이터가 없는경우는 200(OK) 또는 204(No Content) 응답</p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">HTTP/1.1 204 No Content\nContent-Location: /existing.html<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"kotlin---springboot\"><a href=\"#kotlin---springboot\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kotlin - SpringBoot</h1>\n<h2 id=\"controller-예제\"><a href=\"#controller-%EC%98%88%EC%A0%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Controller 예제</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@RestController\n@RequestMapping(\"/api\")\nclass PutApiController {\n\n    //비추천 - @PutMapping 사용\n    @RequestMapping(method = [RequestMethod.PUT], path = [\"/request-mapping\"])\n    fun requestMapping(): String{\n        return \"request-mapping - put method\"\n    }\n\n\n    //추천\n    @PutMapping(\"/put-mapping\")\n    fun putMapping(@RequestBody svcDto: UserRequestDto): UserResponseDto {\n        return UserResponseDto().apply {\n            this.result = ResultDto().apply {\n                this.resultCode = \"OK\"\n                this.resultMessage = \"성공\"\n            }\n        }.apply {\n            this.description = \"~~~~~~~~~~~~~~\"\n        }.apply {\n            this.userList.add(svcDto)\n\n            this.userList.add(UserRequestDto().apply {\n                this.name = \"Steve\"\n                this.age = 22\n            })\n\n            this.userList.add(UserRequestDto().apply {\n                this.name = \"Ah~~~~\"\n                this.age = 18\n            })\n        }\n    }\n}<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"dto---userrequestdto\"><a href=\"#dto---userrequestdto\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dto - UserRequestDto</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy::class)\n//@JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy::class) //deprecated\ndata class UserRequestDto(\n    var name: String?=null,\n    var age: Int?=null,\n    var email: String?=null,\n    var address: String?=null,\n)<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"dto---userresponsedto\"><a href=\"#dto---userresponsedto\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dto - UserResponseDto</h2>\n<pre class=\"language-Kotlin line-numbers\"><code class=\"language-Kotlin\">@JsonNaming(PropertyNamingStrategies.SnakeCaseStrategy::class)\n//@JsonNaming(PropertyNamingStrategy.SnakeCaseStrategy::class) //deprecated\ndata class UserResponseDto(\n    var result:ResultDto?=null,\n    var description:String?=null,\n\n    @JsonProperty(\"user\")\n    var userList: MutableList<UserRequestDto> = mutableListOf(),\n)\n\n\ndata class ResultDto (\n    var resultCode: String ?= null,\n    var resultMessage: String ?= null,\n)<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"출처\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>출처</h1>\n<ul>\n<li>PUT의 개념, 예제 - <a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Methods/PUT\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/HTTP/Methods/PUT</a>  </li>\n<li>멱등성 - <a href=\"https://developer.mozilla.org/ko/docs/Glossary/Idempotent\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Glossary/Idempotent</a>  </li>\n<li>PropertyNamingStrategies.SnakeCaseStrategy::class - <a href=\"https://zzang9ha.tistory.com/380\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://zzang9ha.tistory.com/380</a>  </li>\n<li>인프런: 스프링부트-코틀린 - <a href=\"https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EC%BD%94%ED%8B%80%EB%A6%B0</a></li>\n</ul>\n","lang":"ko","category":["Kotlin","SpringBoot"],"date":"2022-09-18T10:22:00.000Z"}},{"node":{"id":"058d9194916c75fe6c1f9d3b45361217","title":"호스트네임변경","content":"<h1 id=\"1-배경\"><a href=\"#1-%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 배경</h1>\n<p>우분투 설치후 기본적으로 호스트네임은 ubuntu로 되어있다. 이걸 내가 사용하는 호스트네임으로 변경하고 싶다.<br>\nubuntu에서 zerost-rpi로 변경할 예정이다.  </p>\n<h3 id=\"--환경\"><a href=\"#--%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>- 환경</h3>\n<p>Ubuntu 22.04 LTS (GNU/Linux 5.15.0-1011-raspi aarch64)</p>\n<h1 id=\"2-현재-호스트네임-확인\"><a href=\"#2-%ED%98%84%EC%9E%AC-%ED%98%B8%EC%8A%A4%ED%8A%B8%EB%84%A4%EC%9E%84-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 현재 호스트네임 확인</h1>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">hostname</span>\nubuntu<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"3-호스트네임-변경\"><a href=\"#3-%ED%98%B8%EC%8A%A4%ED%8A%B8%EB%84%A4%EC%9E%84-%EB%B3%80%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 호스트네임 변경</h1>\n<p>내가 변경하고자 하는 zerost-rpi로 변경한다. 아래와 같이 명령어를 실행한다.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> hostnamectl set-hostname zerost-rpi<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<h1 id=\"4-변경된-호스트네임-확인\"><a href=\"#4-%EB%B3%80%EA%B2%BD%EB%90%9C-%ED%98%B8%EC%8A%A4%ED%8A%B8%EB%84%A4%EC%9E%84-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 변경된 호스트네임 확인</h1>\n<p>내가 변경한 이름으로 변경완료 확인.</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">hostname</span>\nzerost-rpi<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h1 id=\"5-결론\"><a href=\"#5-%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. 결론</h1>\n<p>한줄로 간단하게 호스트네임이 변경된다. </p>\n<h1 id=\"9-참조\"><a href=\"#9-%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. 참조</h1>\n<p><a href=\"https://pinggoopark.tistory.com/86\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">[linux] 우분투 hostname 변경하기 - 이제 막 시작 Blog</a></p>\n","lang":"ko","category":["Linux","설정"],"date":"2022-06-29T21:36:00.000Z"}},{"node":{"id":"ed92af7545f3edd2f877f2fc086d50a0","title":"Apache Commons IO 라이브러리 FilenameUtils","content":"<h1 id=\"1-배경\"><a href=\"#1-%EB%B0%B0%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. 배경</h1>\n<p>프로젝트를 수행하다보면 파일관련된 작업이 필요하다. 예를 들면 파일업로드, 첨부파일 다운로드등 처리를 하게 되면 파일명, 확장자, 파일사이즈, 경로등\n처리가 필요하게 된다. 그 때마다 Java에서 지원하는 API를 찾아서, RAW데이터를 받아서 데이터 가공을 해야한다. 가공하는 과정에서 예기치 못하는 오류가 발생할 수 도 있다.\n그래서 데이터 가공하는 과정도 별도로 테스트가 필요한 상황이 된다. 그런데, 이미 이런 기능들을 나만 사용하는 것도 아닐테고, 이미 한참전부터 많은 사람들이 사용하고 있었을 것 같고, 당연히 라이브러리도 있을 것이라고 판단했다. 검색을 했더니 <a href=\"https://commons.apache.org/proper/commons-io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apache Commons IO</a> 라는 라이브러리를 찾았다.<br>\n이번에는 파일의 확장자명을 가져오는 부분이 필요해서 해당 부분을 찾았다.</p>\n<h1 id=\"2-fileutils-class-확인\"><a href=\"#2-fileutils-class-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. FileUtils Class 확인</h1>\n<p><a href=\"https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FilenameUtils.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">File Utils class API</a>를 확인하니 확장자를 가져오는 메소드가 존재한다.</p>\n<blockquote>\n<p>static String <code class=\"language-text\">getExtension(String fileName)</code></p>\n<blockquote>\n<p>Gets the extension of a fileName.</p>\n</blockquote>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>파일명</th>\n<th>리턴확장자명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>foo.txt</td>\n<td>\"txt\"</td>\n</tr>\n<tr>\n<td>a/b/c.jpg</td>\n<td>\"jpg\"</td>\n</tr>\n<tr>\n<td>a/b.txt/c</td>\n<td>\"\"</td>\n</tr>\n<tr>\n<td>a/b/c</td>\n<td>\"\"</td>\n</tr>\n</tbody>\n</table>\n<p>예) </p>\n<pre class=\"language-java line-numbers\"><code class=\"language-java\"><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\njpg<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"3-결론\"><a href=\"#3-%EA%B2%B0%EB%A1%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 결론</h1>\n<p>이미 개발해놓은 라이브러리를 사용하는 것이 테스트코드를 줄일수 있는 방법중에 하나 일 것 같아서 적용해보았다. 내가 필요한 부분을 그리 어렵게 개발할 수도 있긴 하지만,\n그 동안 많은 사람들이 사용하면서 많은 부분을 보완해가면서 만든 소스를 사용하는 것. 내가 예상하지 못했던 부분까지 생각해서 개발 되어 있을 수도 있으니 사용하는게 좋을 것 같다.\n이런 기능을 개발할 시간에 해당 라이브러리를 적용하고 나는 좀 더 비지니스 개발에 집중하자.</p>\n<h1 id=\"9-참조\"><a href=\"#9-%EC%B0%B8%EC%A1%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>9. 참조</h1>\n<p><a href=\"https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FilenameUtils.html#getExtension-java.lang.String\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FilenameUtils - Apache Commons IO</a></p>\n","lang":"ko","category":["Java","Library"],"date":"2022-06-28T22:29:00.000Z"}}]},"menu":{"edges":[{"node":{"category":["TypeScript"],"lang":"ko"}},{"node":{"category":["TypeScript"],"lang":"ko"}},{"node":{"category":["Raspberry Pi","Ubuntu Linux"],"lang":"ko"}},{"node":{"category":["Raspberry Pi","Ubuntu Linux"],"lang":"ko"}},{"node":{"category":["Raspberry Pi","Ubuntu Linux"],"lang":"ko"}},{"node":{"category":["Raspberry Pi","Ubuntu Linux"],"lang":"ko"}},{"node":{"category":["NodeJS","개발환경"],"lang":"ko"}},{"node":{"category":["Linux","설정"],"lang":"ko"}},{"node":{"category":["Linux","Shell Script"],"lang":"ko"}},{"node":{"category":["Kotlin","SpringBoot"],"lang":"ko"}},{"node":{"category":["Kotlin","SpringBoot"],"lang":"ko"}},{"node":{"category":["Kotlin","SpringBoot"],"lang":"ko"}},{"node":{"category":["Java","Library"],"lang":"ko"}},{"node":{"category":["FrontEnd","Vue3"],"lang":"ko"}},{"node":{"category":["FrontEnd","Vue3"],"lang":"ko"}},{"node":{"category":["FrontEnd","Vue3"],"lang":"ko"}},{"node":{"category":["FrontEnd","Gridsome"],"lang":"ko"}},{"node":{"category":["FrontEnd","Gridsome"],"lang":"ko"}},{"node":{"category":["FrontEnd","Gridsome"],"lang":"ko"}},{"node":{"category":["Database","Postgresql"],"lang":"ko"}},{"node":{"category":["Database","Postgresql"],"lang":"ko"}},{"node":{"category":["Blog","에세이"],"lang":"ko"}},{"node":{"category":["Blog","블로그개발일지"],"lang":"ko"}}]}},"context":{}}